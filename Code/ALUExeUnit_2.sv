// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module ALUExeUnit_2(
  input         clock,
                reset,
                io_req_valid,
  input  [6:0]  io_req_bits_uop_uopc,
  input         io_req_bits_uop_is_rvc,
  input  [9:0]  io_req_bits_uop_fu_code,
  input  [3:0]  io_req_bits_uop_ctrl_br_type,
  input  [1:0]  io_req_bits_uop_ctrl_op1_sel,
  input  [2:0]  io_req_bits_uop_ctrl_op2_sel,
                io_req_bits_uop_ctrl_imm_sel,
  input  [3:0]  io_req_bits_uop_ctrl_op_fcn,
  input         io_req_bits_uop_ctrl_fcn_dw,
  input  [2:0]  io_req_bits_uop_ctrl_csr_cmd,
  input         io_req_bits_uop_is_br,
                io_req_bits_uop_is_jalr,
                io_req_bits_uop_is_jal,
                io_req_bits_uop_is_sfb,
  input  [11:0] io_req_bits_uop_br_mask,
  input  [3:0]  io_req_bits_uop_br_tag,
  input  [4:0]  io_req_bits_uop_ftq_idx,
  input         io_req_bits_uop_edge_inst,
  input  [5:0]  io_req_bits_uop_pc_lob,
  input         io_req_bits_uop_taken,
  input  [19:0] io_req_bits_uop_imm_packed,
  input  [5:0]  io_req_bits_uop_rob_idx,
  input  [3:0]  io_req_bits_uop_ldq_idx,
                io_req_bits_uop_stq_idx,
  input  [1:0]  io_req_bits_uop_rxq_idx,
  input  [6:0]  io_req_bits_uop_pdst,
                io_req_bits_uop_prs1,
  input         io_req_bits_uop_bypassable,
                io_req_bits_uop_is_amo,
                io_req_bits_uop_uses_stq,
  input  [1:0]  io_req_bits_uop_dst_rtype,
  input  [64:0] io_req_bits_rs1_data,
                io_req_bits_rs2_data,
  input         io_req_bits_kill,
                io_ll_iresp_ready,
  input  [11:0] io_brupdate_b1_resolve_mask,
                io_brupdate_b1_mispredict_mask,
  input  [1:0]  io_brupdate_b2_uop_rxq_idx,
  input         io_brupdate_b2_mispredict,
                io_rocc_dis_rocc_vals_0,
                io_rocc_dis_rocc_vals_1,
  input  [6:0]  io_rocc_dis_uops_0_uopc,
  input  [31:0] io_rocc_dis_uops_0_inst,
                io_rocc_dis_uops_0_debug_inst,
  input         io_rocc_dis_uops_0_is_rvc,
  input  [39:0] io_rocc_dis_uops_0_debug_pc,
  input  [2:0]  io_rocc_dis_uops_0_iq_type,
  input  [9:0]  io_rocc_dis_uops_0_fu_code,
  input  [3:0]  io_rocc_dis_uops_0_ctrl_br_type,
  input  [1:0]  io_rocc_dis_uops_0_ctrl_op1_sel,
  input  [2:0]  io_rocc_dis_uops_0_ctrl_op2_sel,
                io_rocc_dis_uops_0_ctrl_imm_sel,
  input  [3:0]  io_rocc_dis_uops_0_ctrl_op_fcn,
  input         io_rocc_dis_uops_0_ctrl_fcn_dw,
  input  [2:0]  io_rocc_dis_uops_0_ctrl_csr_cmd,
  input         io_rocc_dis_uops_0_ctrl_is_load,
                io_rocc_dis_uops_0_ctrl_is_sta,
                io_rocc_dis_uops_0_ctrl_is_std,
  input  [1:0]  io_rocc_dis_uops_0_iw_state,
  input         io_rocc_dis_uops_0_iw_p1_poisoned,
                io_rocc_dis_uops_0_iw_p2_poisoned,
                io_rocc_dis_uops_0_is_br,
                io_rocc_dis_uops_0_is_jalr,
                io_rocc_dis_uops_0_is_jal,
                io_rocc_dis_uops_0_is_sfb,
  input  [11:0] io_rocc_dis_uops_0_br_mask,
  input  [3:0]  io_rocc_dis_uops_0_br_tag,
  input  [4:0]  io_rocc_dis_uops_0_ftq_idx,
  input         io_rocc_dis_uops_0_edge_inst,
  input  [5:0]  io_rocc_dis_uops_0_pc_lob,
  input         io_rocc_dis_uops_0_taken,
  input  [19:0] io_rocc_dis_uops_0_imm_packed,
  input  [11:0] io_rocc_dis_uops_0_csr_addr,
  input  [5:0]  io_rocc_dis_uops_0_rob_idx,
  input  [3:0]  io_rocc_dis_uops_0_ldq_idx,
                io_rocc_dis_uops_0_stq_idx,
  input  [1:0]  io_rocc_dis_uops_0_rxq_idx,
  input  [6:0]  io_rocc_dis_uops_0_pdst,
                io_rocc_dis_uops_0_prs1,
                io_rocc_dis_uops_0_prs2,
                io_rocc_dis_uops_0_prs3,
  input         io_rocc_dis_uops_0_prs1_busy,
                io_rocc_dis_uops_0_prs2_busy,
                io_rocc_dis_uops_0_prs3_busy,
  input  [6:0]  io_rocc_dis_uops_0_stale_pdst,
  input         io_rocc_dis_uops_0_exception,
  input  [63:0] io_rocc_dis_uops_0_exc_cause,
  input         io_rocc_dis_uops_0_bypassable,
  input  [4:0]  io_rocc_dis_uops_0_mem_cmd,
  input  [1:0]  io_rocc_dis_uops_0_mem_size,
  input         io_rocc_dis_uops_0_mem_signed,
                io_rocc_dis_uops_0_is_fence,
                io_rocc_dis_uops_0_is_fencei,
                io_rocc_dis_uops_0_is_amo,
                io_rocc_dis_uops_0_uses_ldq,
                io_rocc_dis_uops_0_uses_stq,
                io_rocc_dis_uops_0_is_sys_pc2epc,
                io_rocc_dis_uops_0_is_unique,
                io_rocc_dis_uops_0_flush_on_commit,
                io_rocc_dis_uops_0_ldst_is_rs1,
  input  [5:0]  io_rocc_dis_uops_0_ldst,
                io_rocc_dis_uops_0_lrs1,
                io_rocc_dis_uops_0_lrs2,
                io_rocc_dis_uops_0_lrs3,
  input         io_rocc_dis_uops_0_ldst_val,
  input  [1:0]  io_rocc_dis_uops_0_dst_rtype,
                io_rocc_dis_uops_0_lrs1_rtype,
                io_rocc_dis_uops_0_lrs2_rtype,
  input         io_rocc_dis_uops_0_frs3_en,
                io_rocc_dis_uops_0_fp_val,
                io_rocc_dis_uops_0_fp_single,
                io_rocc_dis_uops_0_xcpt_pf_if,
                io_rocc_dis_uops_0_xcpt_ae_if,
                io_rocc_dis_uops_0_xcpt_ma_if,
                io_rocc_dis_uops_0_bp_debug_if,
                io_rocc_dis_uops_0_bp_xcpt_if,
  input  [1:0]  io_rocc_dis_uops_0_debug_fsrc,
                io_rocc_dis_uops_0_debug_tsrc,
  input  [6:0]  io_rocc_dis_uops_1_uopc,
  input  [31:0] io_rocc_dis_uops_1_inst,
                io_rocc_dis_uops_1_debug_inst,
  input         io_rocc_dis_uops_1_is_rvc,
  input  [39:0] io_rocc_dis_uops_1_debug_pc,
  input  [2:0]  io_rocc_dis_uops_1_iq_type,
  input  [9:0]  io_rocc_dis_uops_1_fu_code,
  input  [3:0]  io_rocc_dis_uops_1_ctrl_br_type,
  input  [1:0]  io_rocc_dis_uops_1_ctrl_op1_sel,
  input  [2:0]  io_rocc_dis_uops_1_ctrl_op2_sel,
                io_rocc_dis_uops_1_ctrl_imm_sel,
  input  [3:0]  io_rocc_dis_uops_1_ctrl_op_fcn,
  input         io_rocc_dis_uops_1_ctrl_fcn_dw,
  input  [2:0]  io_rocc_dis_uops_1_ctrl_csr_cmd,
  input         io_rocc_dis_uops_1_ctrl_is_load,
                io_rocc_dis_uops_1_ctrl_is_sta,
                io_rocc_dis_uops_1_ctrl_is_std,
  input  [1:0]  io_rocc_dis_uops_1_iw_state,
  input         io_rocc_dis_uops_1_iw_p1_poisoned,
                io_rocc_dis_uops_1_iw_p2_poisoned,
                io_rocc_dis_uops_1_is_br,
                io_rocc_dis_uops_1_is_jalr,
                io_rocc_dis_uops_1_is_jal,
                io_rocc_dis_uops_1_is_sfb,
  input  [11:0] io_rocc_dis_uops_1_br_mask,
  input  [3:0]  io_rocc_dis_uops_1_br_tag,
  input  [4:0]  io_rocc_dis_uops_1_ftq_idx,
  input         io_rocc_dis_uops_1_edge_inst,
  input  [5:0]  io_rocc_dis_uops_1_pc_lob,
  input         io_rocc_dis_uops_1_taken,
  input  [19:0] io_rocc_dis_uops_1_imm_packed,
  input  [11:0] io_rocc_dis_uops_1_csr_addr,
  input  [5:0]  io_rocc_dis_uops_1_rob_idx,
  input  [3:0]  io_rocc_dis_uops_1_ldq_idx,
                io_rocc_dis_uops_1_stq_idx,
  input  [1:0]  io_rocc_dis_uops_1_rxq_idx,
  input  [6:0]  io_rocc_dis_uops_1_pdst,
                io_rocc_dis_uops_1_prs1,
                io_rocc_dis_uops_1_prs2,
                io_rocc_dis_uops_1_prs3,
  input         io_rocc_dis_uops_1_prs1_busy,
                io_rocc_dis_uops_1_prs2_busy,
                io_rocc_dis_uops_1_prs3_busy,
  input  [6:0]  io_rocc_dis_uops_1_stale_pdst,
  input         io_rocc_dis_uops_1_exception,
  input  [63:0] io_rocc_dis_uops_1_exc_cause,
  input         io_rocc_dis_uops_1_bypassable,
  input  [4:0]  io_rocc_dis_uops_1_mem_cmd,
  input  [1:0]  io_rocc_dis_uops_1_mem_size,
  input         io_rocc_dis_uops_1_mem_signed,
                io_rocc_dis_uops_1_is_fence,
                io_rocc_dis_uops_1_is_fencei,
                io_rocc_dis_uops_1_is_amo,
                io_rocc_dis_uops_1_uses_ldq,
                io_rocc_dis_uops_1_uses_stq,
                io_rocc_dis_uops_1_is_sys_pc2epc,
                io_rocc_dis_uops_1_is_unique,
                io_rocc_dis_uops_1_flush_on_commit,
                io_rocc_dis_uops_1_ldst_is_rs1,
  input  [5:0]  io_rocc_dis_uops_1_ldst,
                io_rocc_dis_uops_1_lrs1,
                io_rocc_dis_uops_1_lrs2,
                io_rocc_dis_uops_1_lrs3,
  input         io_rocc_dis_uops_1_ldst_val,
  input  [1:0]  io_rocc_dis_uops_1_dst_rtype,
                io_rocc_dis_uops_1_lrs1_rtype,
                io_rocc_dis_uops_1_lrs2_rtype,
  input         io_rocc_dis_uops_1_frs3_en,
                io_rocc_dis_uops_1_fp_val,
                io_rocc_dis_uops_1_fp_single,
                io_rocc_dis_uops_1_xcpt_pf_if,
                io_rocc_dis_uops_1_xcpt_ae_if,
                io_rocc_dis_uops_1_xcpt_ma_if,
                io_rocc_dis_uops_1_bp_debug_if,
                io_rocc_dis_uops_1_bp_xcpt_if,
  input  [1:0]  io_rocc_dis_uops_1_debug_fsrc,
                io_rocc_dis_uops_1_debug_tsrc,
  input  [5:0]  io_rocc_rob_pnr_idx,
                io_rocc_rob_head_idx,
  input         io_rocc_rocc_cmd_ready,
                io_rocc_rocc_resp_valid,
  input  [4:0]  io_rocc_rocc_resp_bits_rd,
  input  [63:0] io_rocc_rocc_resp_bits_data,
  input         io_status_debug,
                io_status_cease,
                io_status_wfi,
  input  [1:0]  io_status_dprv,
                io_status_prv,
  input         io_status_tsr,
                io_status_tw,
                io_status_tvm,
                io_status_mxr,
                io_status_sum,
                io_status_mprv,
  input  [1:0]  io_status_fs,
                io_status_mpp,
  input         io_status_spp,
                io_status_mpie,
                io_status_spie,
                io_status_mie,
                io_status_sie,
                io_com_exception,
  output [9:0]  io_fu_types,
  output        io_iresp_valid,
  output [2:0]  io_iresp_bits_uop_ctrl_csr_cmd,
  output [11:0] io_iresp_bits_uop_csr_addr,
  output [5:0]  io_iresp_bits_uop_rob_idx,
  output [6:0]  io_iresp_bits_uop_pdst,
  output        io_iresp_bits_uop_bypassable,
                io_iresp_bits_uop_is_amo,
                io_iresp_bits_uop_uses_stq,
  output [1:0]  io_iresp_bits_uop_dst_rtype,
  output [64:0] io_iresp_bits_data,
  output        io_ll_iresp_valid,
  output [5:0]  io_ll_iresp_bits_uop_rob_idx,
  output [6:0]  io_ll_iresp_bits_uop_pdst,
  output        io_ll_iresp_bits_uop_is_amo,
                io_ll_iresp_bits_uop_uses_stq,
  output [1:0]  io_ll_iresp_bits_uop_dst_rtype,
  output [64:0] io_ll_iresp_bits_data,
  output        io_bypass_0_valid,
  output [6:0]  io_bypass_0_bits_uop_pdst,
  output [1:0]  io_bypass_0_bits_uop_dst_rtype,
  output [64:0] io_bypass_0_bits_data,
  output        io_rocc_rxq_full,
                io_rocc_rxq_empty,
  output [1:0]  io_rocc_rxq_idx_0,
                io_rocc_rxq_idx_1,
  output        io_rocc_rocc_cmd_valid,
  output [6:0]  io_rocc_rocc_cmd_bits_inst_funct,
  output [4:0]  io_rocc_rocc_cmd_bits_inst_rs2,
                io_rocc_rocc_cmd_bits_inst_rs1,
  output        io_rocc_rocc_cmd_bits_inst_xd,
                io_rocc_rocc_cmd_bits_inst_xs1,
                io_rocc_rocc_cmd_bits_inst_xs2,
  output [4:0]  io_rocc_rocc_cmd_bits_inst_rd,
  output [6:0]  io_rocc_rocc_cmd_bits_inst_opcode,
  output [63:0] io_rocc_rocc_cmd_bits_rs1,
                io_rocc_rocc_cmd_bits_rs2,
  output        io_rocc_rocc_cmd_bits_status_debug,
                io_rocc_rocc_cmd_bits_status_cease,
                io_rocc_rocc_cmd_bits_status_wfi,
  output [1:0]  io_rocc_rocc_cmd_bits_status_dprv,
                io_rocc_rocc_cmd_bits_status_prv,
  output        io_rocc_rocc_cmd_bits_status_tsr,
                io_rocc_rocc_cmd_bits_status_tw,
                io_rocc_rocc_cmd_bits_status_tvm,
                io_rocc_rocc_cmd_bits_status_mxr,
                io_rocc_rocc_cmd_bits_status_sum,
                io_rocc_rocc_cmd_bits_status_mprv,
  output [1:0]  io_rocc_rocc_cmd_bits_status_fs,
                io_rocc_rocc_cmd_bits_status_mpp,
  output        io_rocc_rocc_cmd_bits_status_spp,
                io_rocc_rocc_cmd_bits_status_mpie,
                io_rocc_rocc_cmd_bits_status_spie,
                io_rocc_rocc_cmd_bits_status_mie,
                io_rocc_rocc_cmd_bits_status_sie,
                io_rocc_rocc_resp_ready,
                io_brinfo_uop_is_rvc,
  output [11:0] io_brinfo_uop_br_mask,
  output [3:0]  io_brinfo_uop_br_tag,
  output [4:0]  io_brinfo_uop_ftq_idx,
  output        io_brinfo_uop_edge_inst,
  output [5:0]  io_brinfo_uop_pc_lob,
                io_brinfo_uop_rob_idx,
  output [3:0]  io_brinfo_uop_ldq_idx,
                io_brinfo_uop_stq_idx,
  output [1:0]  io_brinfo_uop_rxq_idx,
  output        io_brinfo_valid,
                io_brinfo_mispredict,
                io_brinfo_taken,
  output [2:0]  io_brinfo_cfi_type,
  output [1:0]  io_brinfo_pc_sel,
  output [20:0] io_brinfo_target_offset
);

  wire        div_busy;	// @[execution-unit.scala:370:39]
  wire        _div_io_req_ready;	// @[execution-unit.scala:357:17]
  wire        _div_io_resp_valid;	// @[execution-unit.scala:357:17]
  wire [5:0]  _div_io_resp_bits_uop_rob_idx;	// @[execution-unit.scala:357:17]
  wire [6:0]  _div_io_resp_bits_uop_pdst;	// @[execution-unit.scala:357:17]
  wire        _div_io_resp_bits_uop_bypassable;	// @[execution-unit.scala:357:17]
  wire        _div_io_resp_bits_uop_is_amo;	// @[execution-unit.scala:357:17]
  wire        _div_io_resp_bits_uop_uses_stq;	// @[execution-unit.scala:357:17]
  wire [1:0]  _div_io_resp_bits_uop_dst_rtype;	// @[execution-unit.scala:357:17]
  wire [63:0] _div_io_resp_bits_data;	// @[execution-unit.scala:357:17]
  wire [63:0] _rocc_io_resp_bits_data;	// @[execution-unit.scala:295:18]
  wire        _alu_io_resp_valid;	// @[execution-unit.scala:262:17]
  wire [19:0] _alu_io_resp_bits_uop_imm_packed;	// @[execution-unit.scala:262:17]
  wire [5:0]  _alu_io_resp_bits_uop_rob_idx;	// @[execution-unit.scala:262:17]
  wire [6:0]  _alu_io_resp_bits_uop_pdst;	// @[execution-unit.scala:262:17]
  wire        _alu_io_resp_bits_uop_bypassable;	// @[execution-unit.scala:262:17]
  wire        _alu_io_resp_bits_uop_is_amo;	// @[execution-unit.scala:262:17]
  wire        _alu_io_resp_bits_uop_uses_stq;	// @[execution-unit.scala:262:17]
  wire [1:0]  _alu_io_resp_bits_uop_dst_rtype;	// @[execution-unit.scala:262:17]
  wire [63:0] _alu_io_resp_bits_data;	// @[execution-unit.scala:262:17]
  wire [63:0] _alu_io_bypass_0_bits_data;	// @[execution-unit.scala:262:17]
  assign div_busy = ~_div_io_req_ready | io_req_valid & io_req_bits_uop_fu_code[4];	// @[execution-unit.scala:357:17, :370:{21,39}, :371:35, micro-op.scala:154:40]
  `ifndef SYNTHESIS	// @[execution-unit.scala:416:10]
    wire [1:0] _T_24 = {1'h0, _alu_io_resp_valid} + {1'h0, _div_io_resp_valid};	// @[Bitwise.scala:51:90, execution-unit.scala:262:17, :284:15, :357:17]
    always @(posedge clock) begin	// @[execution-unit.scala:416:10]
      if (~reset & ~(~(_T_24[1]) & ~_div_io_resp_valid | _T_24 != 2'h3 & _div_io_resp_valid)) begin	// @[Bitwise.scala:51:90, execution-unit.scala:357:17, :416:{10,58,65,68,83}, :417:{58,65}]
        if (`ASSERT_VERBOSE_COND_)	// @[execution-unit.scala:416:10]
          $error("Assertion failed: Multiple functional units are fighting over the write port.\n    at execution-unit.scala:416 assert ((PopCount(iresp_fu_units.map(_.io.resp.valid)) <= 1.U && !div_resp_val) ||\n");	// @[execution-unit.scala:416:10]
        if (`STOP_COND_)	// @[execution-unit.scala:416:10]
          $fatal;	// @[execution-unit.scala:416:10]
      end
    end // always @(posedge)
  `endif // not def SYNTHESIS
  ALUUnit_1 alu (	// @[execution-unit.scala:262:17]
    .clock                          (clock),
    .reset                          (reset),
    .io_req_valid                   (io_req_valid & (io_req_bits_uop_fu_code == 10'h1 | io_req_bits_uop_fu_code == 10'h2 | io_req_bits_uop_fu_code == 10'h20 & io_req_bits_uop_uopc != 7'h6C)),	// @[execution-unit.scala:251:21, :254:21, :255:21, :266:20, :267:32, :268:{32,43}, :269:{32,43,67}]
    .io_req_bits_uop_uopc           (io_req_bits_uop_uopc),
    .io_req_bits_uop_is_rvc         (io_req_bits_uop_is_rvc),
    .io_req_bits_uop_ctrl_br_type   (io_req_bits_uop_ctrl_br_type),
    .io_req_bits_uop_ctrl_op1_sel   (io_req_bits_uop_ctrl_op1_sel),
    .io_req_bits_uop_ctrl_op2_sel   (io_req_bits_uop_ctrl_op2_sel),
    .io_req_bits_uop_ctrl_imm_sel   (io_req_bits_uop_ctrl_imm_sel),
    .io_req_bits_uop_ctrl_op_fcn    (io_req_bits_uop_ctrl_op_fcn),
    .io_req_bits_uop_ctrl_fcn_dw    (io_req_bits_uop_ctrl_fcn_dw),
    .io_req_bits_uop_ctrl_csr_cmd   (io_req_bits_uop_ctrl_csr_cmd),
    .io_req_bits_uop_is_br          (io_req_bits_uop_is_br),
    .io_req_bits_uop_is_jalr        (io_req_bits_uop_is_jalr),
    .io_req_bits_uop_is_jal         (io_req_bits_uop_is_jal),
    .io_req_bits_uop_is_sfb         (io_req_bits_uop_is_sfb),
    .io_req_bits_uop_br_mask        (io_req_bits_uop_br_mask),
    .io_req_bits_uop_br_tag         (io_req_bits_uop_br_tag),
    .io_req_bits_uop_ftq_idx        (io_req_bits_uop_ftq_idx),
    .io_req_bits_uop_edge_inst      (io_req_bits_uop_edge_inst),
    .io_req_bits_uop_pc_lob         (io_req_bits_uop_pc_lob),
    .io_req_bits_uop_taken          (io_req_bits_uop_taken),
    .io_req_bits_uop_imm_packed     (io_req_bits_uop_imm_packed),
    .io_req_bits_uop_rob_idx        (io_req_bits_uop_rob_idx),
    .io_req_bits_uop_ldq_idx        (io_req_bits_uop_ldq_idx),
    .io_req_bits_uop_stq_idx        (io_req_bits_uop_stq_idx),
    .io_req_bits_uop_rxq_idx        (io_req_bits_uop_rxq_idx),
    .io_req_bits_uop_pdst           (io_req_bits_uop_pdst),
    .io_req_bits_uop_prs1           (io_req_bits_uop_prs1),
    .io_req_bits_uop_bypassable     (io_req_bits_uop_bypassable),
    .io_req_bits_uop_is_amo         (io_req_bits_uop_is_amo),
    .io_req_bits_uop_uses_stq       (io_req_bits_uop_uses_stq),
    .io_req_bits_uop_dst_rtype      (io_req_bits_uop_dst_rtype),
    .io_req_bits_rs1_data           (io_req_bits_rs1_data[63:0]),	// @[execution-unit.scala:274:30]
    .io_req_bits_rs2_data           (io_req_bits_rs2_data[63:0]),	// @[execution-unit.scala:275:30]
    .io_req_bits_kill               (io_req_bits_kill),
    .io_brupdate_b1_resolve_mask    (io_brupdate_b1_resolve_mask),
    .io_brupdate_b1_mispredict_mask (io_brupdate_b1_mispredict_mask),
    .io_resp_valid                  (_alu_io_resp_valid),
    .io_resp_bits_uop_ctrl_csr_cmd  (io_iresp_bits_uop_ctrl_csr_cmd),
    .io_resp_bits_uop_imm_packed    (_alu_io_resp_bits_uop_imm_packed),
    .io_resp_bits_uop_rob_idx       (_alu_io_resp_bits_uop_rob_idx),
    .io_resp_bits_uop_pdst          (_alu_io_resp_bits_uop_pdst),
    .io_resp_bits_uop_bypassable    (_alu_io_resp_bits_uop_bypassable),
    .io_resp_bits_uop_is_amo        (_alu_io_resp_bits_uop_is_amo),
    .io_resp_bits_uop_uses_stq      (_alu_io_resp_bits_uop_uses_stq),
    .io_resp_bits_uop_dst_rtype     (_alu_io_resp_bits_uop_dst_rtype),
    .io_resp_bits_data              (_alu_io_resp_bits_data),
    .io_bypass_0_valid              (io_bypass_0_valid),
    .io_bypass_0_bits_uop_pdst      (io_bypass_0_bits_uop_pdst),
    .io_bypass_0_bits_uop_dst_rtype (io_bypass_0_bits_uop_dst_rtype),
    .io_bypass_0_bits_data          (_alu_io_bypass_0_bits_data),
    .io_brinfo_uop_is_rvc           (io_brinfo_uop_is_rvc),
    .io_brinfo_uop_br_mask          (io_brinfo_uop_br_mask),
    .io_brinfo_uop_br_tag           (io_brinfo_uop_br_tag),
    .io_brinfo_uop_ftq_idx          (io_brinfo_uop_ftq_idx),
    .io_brinfo_uop_edge_inst        (io_brinfo_uop_edge_inst),
    .io_brinfo_uop_pc_lob           (io_brinfo_uop_pc_lob),
    .io_brinfo_uop_rob_idx          (io_brinfo_uop_rob_idx),
    .io_brinfo_uop_ldq_idx          (io_brinfo_uop_ldq_idx),
    .io_brinfo_uop_stq_idx          (io_brinfo_uop_stq_idx),
    .io_brinfo_uop_rxq_idx          (io_brinfo_uop_rxq_idx),
    .io_brinfo_valid                (io_brinfo_valid),
    .io_brinfo_mispredict           (io_brinfo_mispredict),
    .io_brinfo_taken                (io_brinfo_taken),
    .io_brinfo_cfi_type             (io_brinfo_cfi_type),
    .io_brinfo_pc_sel               (io_brinfo_pc_sel),
    .io_brinfo_target_offset        (io_brinfo_target_offset)
  );
  RoCCShim rocc (	// @[execution-unit.scala:295:18]
    .clock                              (clock),
    .reset                              (reset),
    .io_core_dis_rocc_vals_0            (io_rocc_dis_rocc_vals_0),
    .io_core_dis_rocc_vals_1            (io_rocc_dis_rocc_vals_1),
    .io_core_dis_uops_0_uopc            (io_rocc_dis_uops_0_uopc),
    .io_core_dis_uops_0_inst            (io_rocc_dis_uops_0_inst),
    .io_core_dis_uops_0_debug_inst      (io_rocc_dis_uops_0_debug_inst),
    .io_core_dis_uops_0_is_rvc          (io_rocc_dis_uops_0_is_rvc),
    .io_core_dis_uops_0_debug_pc        (io_rocc_dis_uops_0_debug_pc),
    .io_core_dis_uops_0_iq_type         (io_rocc_dis_uops_0_iq_type),
    .io_core_dis_uops_0_fu_code         (io_rocc_dis_uops_0_fu_code),
    .io_core_dis_uops_0_ctrl_br_type    (io_rocc_dis_uops_0_ctrl_br_type),
    .io_core_dis_uops_0_ctrl_op1_sel    (io_rocc_dis_uops_0_ctrl_op1_sel),
    .io_core_dis_uops_0_ctrl_op2_sel    (io_rocc_dis_uops_0_ctrl_op2_sel),
    .io_core_dis_uops_0_ctrl_imm_sel    (io_rocc_dis_uops_0_ctrl_imm_sel),
    .io_core_dis_uops_0_ctrl_op_fcn     (io_rocc_dis_uops_0_ctrl_op_fcn),
    .io_core_dis_uops_0_ctrl_fcn_dw     (io_rocc_dis_uops_0_ctrl_fcn_dw),
    .io_core_dis_uops_0_ctrl_csr_cmd    (io_rocc_dis_uops_0_ctrl_csr_cmd),
    .io_core_dis_uops_0_ctrl_is_load    (io_rocc_dis_uops_0_ctrl_is_load),
    .io_core_dis_uops_0_ctrl_is_sta     (io_rocc_dis_uops_0_ctrl_is_sta),
    .io_core_dis_uops_0_ctrl_is_std     (io_rocc_dis_uops_0_ctrl_is_std),
    .io_core_dis_uops_0_iw_state        (io_rocc_dis_uops_0_iw_state),
    .io_core_dis_uops_0_iw_p1_poisoned  (io_rocc_dis_uops_0_iw_p1_poisoned),
    .io_core_dis_uops_0_iw_p2_poisoned  (io_rocc_dis_uops_0_iw_p2_poisoned),
    .io_core_dis_uops_0_is_br           (io_rocc_dis_uops_0_is_br),
    .io_core_dis_uops_0_is_jalr         (io_rocc_dis_uops_0_is_jalr),
    .io_core_dis_uops_0_is_jal          (io_rocc_dis_uops_0_is_jal),
    .io_core_dis_uops_0_is_sfb          (io_rocc_dis_uops_0_is_sfb),
    .io_core_dis_uops_0_br_mask         (io_rocc_dis_uops_0_br_mask),
    .io_core_dis_uops_0_br_tag          (io_rocc_dis_uops_0_br_tag),
    .io_core_dis_uops_0_ftq_idx         (io_rocc_dis_uops_0_ftq_idx),
    .io_core_dis_uops_0_edge_inst       (io_rocc_dis_uops_0_edge_inst),
    .io_core_dis_uops_0_pc_lob          (io_rocc_dis_uops_0_pc_lob),
    .io_core_dis_uops_0_taken           (io_rocc_dis_uops_0_taken),
    .io_core_dis_uops_0_imm_packed      (io_rocc_dis_uops_0_imm_packed),
    .io_core_dis_uops_0_csr_addr        (io_rocc_dis_uops_0_csr_addr),
    .io_core_dis_uops_0_rob_idx         (io_rocc_dis_uops_0_rob_idx),
    .io_core_dis_uops_0_ldq_idx         (io_rocc_dis_uops_0_ldq_idx),
    .io_core_dis_uops_0_stq_idx         (io_rocc_dis_uops_0_stq_idx),
    .io_core_dis_uops_0_rxq_idx         (io_rocc_dis_uops_0_rxq_idx),
    .io_core_dis_uops_0_pdst            (io_rocc_dis_uops_0_pdst),
    .io_core_dis_uops_0_prs1            (io_rocc_dis_uops_0_prs1),
    .io_core_dis_uops_0_prs2            (io_rocc_dis_uops_0_prs2),
    .io_core_dis_uops_0_prs3            (io_rocc_dis_uops_0_prs3),
    .io_core_dis_uops_0_prs1_busy       (io_rocc_dis_uops_0_prs1_busy),
    .io_core_dis_uops_0_prs2_busy       (io_rocc_dis_uops_0_prs2_busy),
    .io_core_dis_uops_0_prs3_busy       (io_rocc_dis_uops_0_prs3_busy),
    .io_core_dis_uops_0_stale_pdst      (io_rocc_dis_uops_0_stale_pdst),
    .io_core_dis_uops_0_exception       (io_rocc_dis_uops_0_exception),
    .io_core_dis_uops_0_exc_cause       (io_rocc_dis_uops_0_exc_cause),
    .io_core_dis_uops_0_bypassable      (io_rocc_dis_uops_0_bypassable),
    .io_core_dis_uops_0_mem_cmd         (io_rocc_dis_uops_0_mem_cmd),
    .io_core_dis_uops_0_mem_size        (io_rocc_dis_uops_0_mem_size),
    .io_core_dis_uops_0_mem_signed      (io_rocc_dis_uops_0_mem_signed),
    .io_core_dis_uops_0_is_fence        (io_rocc_dis_uops_0_is_fence),
    .io_core_dis_uops_0_is_fencei       (io_rocc_dis_uops_0_is_fencei),
    .io_core_dis_uops_0_is_amo          (io_rocc_dis_uops_0_is_amo),
    .io_core_dis_uops_0_uses_ldq        (io_rocc_dis_uops_0_uses_ldq),
    .io_core_dis_uops_0_uses_stq        (io_rocc_dis_uops_0_uses_stq),
    .io_core_dis_uops_0_is_sys_pc2epc   (io_rocc_dis_uops_0_is_sys_pc2epc),
    .io_core_dis_uops_0_is_unique       (io_rocc_dis_uops_0_is_unique),
    .io_core_dis_uops_0_flush_on_commit (io_rocc_dis_uops_0_flush_on_commit),
    .io_core_dis_uops_0_ldst_is_rs1     (io_rocc_dis_uops_0_ldst_is_rs1),
    .io_core_dis_uops_0_ldst            (io_rocc_dis_uops_0_ldst),
    .io_core_dis_uops_0_lrs1            (io_rocc_dis_uops_0_lrs1),
    .io_core_dis_uops_0_lrs2            (io_rocc_dis_uops_0_lrs2),
    .io_core_dis_uops_0_lrs3            (io_rocc_dis_uops_0_lrs3),
    .io_core_dis_uops_0_ldst_val        (io_rocc_dis_uops_0_ldst_val),
    .io_core_dis_uops_0_dst_rtype       (io_rocc_dis_uops_0_dst_rtype),
    .io_core_dis_uops_0_lrs1_rtype      (io_rocc_dis_uops_0_lrs1_rtype),
    .io_core_dis_uops_0_lrs2_rtype      (io_rocc_dis_uops_0_lrs2_rtype),
    .io_core_dis_uops_0_frs3_en         (io_rocc_dis_uops_0_frs3_en),
    .io_core_dis_uops_0_fp_val          (io_rocc_dis_uops_0_fp_val),
    .io_core_dis_uops_0_fp_single       (io_rocc_dis_uops_0_fp_single),
    .io_core_dis_uops_0_xcpt_pf_if      (io_rocc_dis_uops_0_xcpt_pf_if),
    .io_core_dis_uops_0_xcpt_ae_if      (io_rocc_dis_uops_0_xcpt_ae_if),
    .io_core_dis_uops_0_xcpt_ma_if      (io_rocc_dis_uops_0_xcpt_ma_if),
    .io_core_dis_uops_0_bp_debug_if     (io_rocc_dis_uops_0_bp_debug_if),
    .io_core_dis_uops_0_bp_xcpt_if      (io_rocc_dis_uops_0_bp_xcpt_if),
    .io_core_dis_uops_0_debug_fsrc      (io_rocc_dis_uops_0_debug_fsrc),
    .io_core_dis_uops_0_debug_tsrc      (io_rocc_dis_uops_0_debug_tsrc),
    .io_core_dis_uops_1_uopc            (io_rocc_dis_uops_1_uopc),
    .io_core_dis_uops_1_inst            (io_rocc_dis_uops_1_inst),
    .io_core_dis_uops_1_debug_inst      (io_rocc_dis_uops_1_debug_inst),
    .io_core_dis_uops_1_is_rvc          (io_rocc_dis_uops_1_is_rvc),
    .io_core_dis_uops_1_debug_pc        (io_rocc_dis_uops_1_debug_pc),
    .io_core_dis_uops_1_iq_type         (io_rocc_dis_uops_1_iq_type),
    .io_core_dis_uops_1_fu_code         (io_rocc_dis_uops_1_fu_code),
    .io_core_dis_uops_1_ctrl_br_type    (io_rocc_dis_uops_1_ctrl_br_type),
    .io_core_dis_uops_1_ctrl_op1_sel    (io_rocc_dis_uops_1_ctrl_op1_sel),
    .io_core_dis_uops_1_ctrl_op2_sel    (io_rocc_dis_uops_1_ctrl_op2_sel),
    .io_core_dis_uops_1_ctrl_imm_sel    (io_rocc_dis_uops_1_ctrl_imm_sel),
    .io_core_dis_uops_1_ctrl_op_fcn     (io_rocc_dis_uops_1_ctrl_op_fcn),
    .io_core_dis_uops_1_ctrl_fcn_dw     (io_rocc_dis_uops_1_ctrl_fcn_dw),
    .io_core_dis_uops_1_ctrl_csr_cmd    (io_rocc_dis_uops_1_ctrl_csr_cmd),
    .io_core_dis_uops_1_ctrl_is_load    (io_rocc_dis_uops_1_ctrl_is_load),
    .io_core_dis_uops_1_ctrl_is_sta     (io_rocc_dis_uops_1_ctrl_is_sta),
    .io_core_dis_uops_1_ctrl_is_std     (io_rocc_dis_uops_1_ctrl_is_std),
    .io_core_dis_uops_1_iw_state        (io_rocc_dis_uops_1_iw_state),
    .io_core_dis_uops_1_iw_p1_poisoned  (io_rocc_dis_uops_1_iw_p1_poisoned),
    .io_core_dis_uops_1_iw_p2_poisoned  (io_rocc_dis_uops_1_iw_p2_poisoned),
    .io_core_dis_uops_1_is_br           (io_rocc_dis_uops_1_is_br),
    .io_core_dis_uops_1_is_jalr         (io_rocc_dis_uops_1_is_jalr),
    .io_core_dis_uops_1_is_jal          (io_rocc_dis_uops_1_is_jal),
    .io_core_dis_uops_1_is_sfb          (io_rocc_dis_uops_1_is_sfb),
    .io_core_dis_uops_1_br_mask         (io_rocc_dis_uops_1_br_mask),
    .io_core_dis_uops_1_br_tag          (io_rocc_dis_uops_1_br_tag),
    .io_core_dis_uops_1_ftq_idx         (io_rocc_dis_uops_1_ftq_idx),
    .io_core_dis_uops_1_edge_inst       (io_rocc_dis_uops_1_edge_inst),
    .io_core_dis_uops_1_pc_lob          (io_rocc_dis_uops_1_pc_lob),
    .io_core_dis_uops_1_taken           (io_rocc_dis_uops_1_taken),
    .io_core_dis_uops_1_imm_packed      (io_rocc_dis_uops_1_imm_packed),
    .io_core_dis_uops_1_csr_addr        (io_rocc_dis_uops_1_csr_addr),
    .io_core_dis_uops_1_rob_idx         (io_rocc_dis_uops_1_rob_idx),
    .io_core_dis_uops_1_ldq_idx         (io_rocc_dis_uops_1_ldq_idx),
    .io_core_dis_uops_1_stq_idx         (io_rocc_dis_uops_1_stq_idx),
    .io_core_dis_uops_1_rxq_idx         (io_rocc_dis_uops_1_rxq_idx),
    .io_core_dis_uops_1_pdst            (io_rocc_dis_uops_1_pdst),
    .io_core_dis_uops_1_prs1            (io_rocc_dis_uops_1_prs1),
    .io_core_dis_uops_1_prs2            (io_rocc_dis_uops_1_prs2),
    .io_core_dis_uops_1_prs3            (io_rocc_dis_uops_1_prs3),
    .io_core_dis_uops_1_prs1_busy       (io_rocc_dis_uops_1_prs1_busy),
    .io_core_dis_uops_1_prs2_busy       (io_rocc_dis_uops_1_prs2_busy),
    .io_core_dis_uops_1_prs3_busy       (io_rocc_dis_uops_1_prs3_busy),
    .io_core_dis_uops_1_stale_pdst      (io_rocc_dis_uops_1_stale_pdst),
    .io_core_dis_uops_1_exception       (io_rocc_dis_uops_1_exception),
    .io_core_dis_uops_1_exc_cause       (io_rocc_dis_uops_1_exc_cause),
    .io_core_dis_uops_1_bypassable      (io_rocc_dis_uops_1_bypassable),
    .io_core_dis_uops_1_mem_cmd         (io_rocc_dis_uops_1_mem_cmd),
    .io_core_dis_uops_1_mem_size        (io_rocc_dis_uops_1_mem_size),
    .io_core_dis_uops_1_mem_signed      (io_rocc_dis_uops_1_mem_signed),
    .io_core_dis_uops_1_is_fence        (io_rocc_dis_uops_1_is_fence),
    .io_core_dis_uops_1_is_fencei       (io_rocc_dis_uops_1_is_fencei),
    .io_core_dis_uops_1_is_amo          (io_rocc_dis_uops_1_is_amo),
    .io_core_dis_uops_1_uses_ldq        (io_rocc_dis_uops_1_uses_ldq),
    .io_core_dis_uops_1_uses_stq        (io_rocc_dis_uops_1_uses_stq),
    .io_core_dis_uops_1_is_sys_pc2epc   (io_rocc_dis_uops_1_is_sys_pc2epc),
    .io_core_dis_uops_1_is_unique       (io_rocc_dis_uops_1_is_unique),
    .io_core_dis_uops_1_flush_on_commit (io_rocc_dis_uops_1_flush_on_commit),
    .io_core_dis_uops_1_ldst_is_rs1     (io_rocc_dis_uops_1_ldst_is_rs1),
    .io_core_dis_uops_1_ldst            (io_rocc_dis_uops_1_ldst),
    .io_core_dis_uops_1_lrs1            (io_rocc_dis_uops_1_lrs1),
    .io_core_dis_uops_1_lrs2            (io_rocc_dis_uops_1_lrs2),
    .io_core_dis_uops_1_lrs3            (io_rocc_dis_uops_1_lrs3),
    .io_core_dis_uops_1_ldst_val        (io_rocc_dis_uops_1_ldst_val),
    .io_core_dis_uops_1_dst_rtype       (io_rocc_dis_uops_1_dst_rtype),
    .io_core_dis_uops_1_lrs1_rtype      (io_rocc_dis_uops_1_lrs1_rtype),
    .io_core_dis_uops_1_lrs2_rtype      (io_rocc_dis_uops_1_lrs2_rtype),
    .io_core_dis_uops_1_frs3_en         (io_rocc_dis_uops_1_frs3_en),
    .io_core_dis_uops_1_fp_val          (io_rocc_dis_uops_1_fp_val),
    .io_core_dis_uops_1_fp_single       (io_rocc_dis_uops_1_fp_single),
    .io_core_dis_uops_1_xcpt_pf_if      (io_rocc_dis_uops_1_xcpt_pf_if),
    .io_core_dis_uops_1_xcpt_ae_if      (io_rocc_dis_uops_1_xcpt_ae_if),
    .io_core_dis_uops_1_xcpt_ma_if      (io_rocc_dis_uops_1_xcpt_ma_if),
    .io_core_dis_uops_1_bp_debug_if     (io_rocc_dis_uops_1_bp_debug_if),
    .io_core_dis_uops_1_bp_xcpt_if      (io_rocc_dis_uops_1_bp_xcpt_if),
    .io_core_dis_uops_1_debug_fsrc      (io_rocc_dis_uops_1_debug_fsrc),
    .io_core_dis_uops_1_debug_tsrc      (io_rocc_dis_uops_1_debug_tsrc),
    .io_core_rob_pnr_idx                (io_rocc_rob_pnr_idx),
    .io_core_rob_head_idx               (io_rocc_rob_head_idx),
    .io_core_rocc_cmd_ready             (io_rocc_rocc_cmd_ready),
    .io_core_rocc_resp_valid            (io_rocc_rocc_resp_valid),
    .io_core_rocc_resp_bits_rd          (io_rocc_rocc_resp_bits_rd),
    .io_core_rocc_resp_bits_data        (io_rocc_rocc_resp_bits_data),
    .io_req_valid                       (io_req_valid & io_req_bits_uop_uopc == 7'h6C),	// @[execution-unit.scala:269:67, :296:{47,71}]
    .io_req_bits_uop_br_mask            (io_req_bits_uop_br_mask),
    .io_req_bits_uop_rob_idx            (io_req_bits_uop_rob_idx),
    .io_req_bits_uop_rxq_idx            (io_req_bits_uop_rxq_idx),
    .io_req_bits_uop_pdst               (io_req_bits_uop_pdst),
    .io_req_bits_rs1_data               (io_req_bits_rs1_data[63:0]),	// @[execution-unit.scala:274:30]
    .io_req_bits_rs2_data               (io_req_bits_rs2_data[63:0]),	// @[execution-unit.scala:275:30]
    .io_resp_ready                      (io_ll_iresp_ready),
    .io_brupdate_b1_resolve_mask        (io_brupdate_b1_resolve_mask),
    .io_brupdate_b1_mispredict_mask     (io_brupdate_b1_mispredict_mask),
    .io_brupdate_b2_uop_rxq_idx         (io_brupdate_b2_uop_rxq_idx),
    .io_brupdate_b2_mispredict          (io_brupdate_b2_mispredict),
    .io_status_debug                    (io_status_debug),
    .io_status_cease                    (io_status_cease),
    .io_status_wfi                      (io_status_wfi),
    .io_status_dprv                     (io_status_dprv),
    .io_status_prv                      (io_status_prv),
    .io_status_tsr                      (io_status_tsr),
    .io_status_tw                       (io_status_tw),
    .io_status_tvm                      (io_status_tvm),
    .io_status_mxr                      (io_status_mxr),
    .io_status_sum                      (io_status_sum),
    .io_status_mprv                     (io_status_mprv),
    .io_status_fs                       (io_status_fs),
    .io_status_mpp                      (io_status_mpp),
    .io_status_spp                      (io_status_spp),
    .io_status_mpie                     (io_status_mpie),
    .io_status_spie                     (io_status_spie),
    .io_status_mie                      (io_status_mie),
    .io_status_sie                      (io_status_sie),
    .io_exception                       (io_com_exception),
    .io_core_rxq_full                   (io_rocc_rxq_full),
    .io_core_rxq_empty                  (io_rocc_rxq_empty),
    .io_core_rxq_idx_0                  (io_rocc_rxq_idx_0),
    .io_core_rxq_idx_1                  (io_rocc_rxq_idx_1),
    .io_core_rocc_cmd_valid             (io_rocc_rocc_cmd_valid),
    .io_core_rocc_cmd_bits_inst_funct   (io_rocc_rocc_cmd_bits_inst_funct),
    .io_core_rocc_cmd_bits_inst_rs2     (io_rocc_rocc_cmd_bits_inst_rs2),
    .io_core_rocc_cmd_bits_inst_rs1     (io_rocc_rocc_cmd_bits_inst_rs1),
    .io_core_rocc_cmd_bits_inst_xd      (io_rocc_rocc_cmd_bits_inst_xd),
    .io_core_rocc_cmd_bits_inst_xs1     (io_rocc_rocc_cmd_bits_inst_xs1),
    .io_core_rocc_cmd_bits_inst_xs2     (io_rocc_rocc_cmd_bits_inst_xs2),
    .io_core_rocc_cmd_bits_inst_rd      (io_rocc_rocc_cmd_bits_inst_rd),
    .io_core_rocc_cmd_bits_inst_opcode  (io_rocc_rocc_cmd_bits_inst_opcode),
    .io_core_rocc_cmd_bits_rs1          (io_rocc_rocc_cmd_bits_rs1),
    .io_core_rocc_cmd_bits_rs2          (io_rocc_rocc_cmd_bits_rs2),
    .io_core_rocc_cmd_bits_status_debug (io_rocc_rocc_cmd_bits_status_debug),
    .io_core_rocc_cmd_bits_status_cease (io_rocc_rocc_cmd_bits_status_cease),
    .io_core_rocc_cmd_bits_status_wfi   (io_rocc_rocc_cmd_bits_status_wfi),
    .io_core_rocc_cmd_bits_status_dprv  (io_rocc_rocc_cmd_bits_status_dprv),
    .io_core_rocc_cmd_bits_status_prv   (io_rocc_rocc_cmd_bits_status_prv),
    .io_core_rocc_cmd_bits_status_tsr   (io_rocc_rocc_cmd_bits_status_tsr),
    .io_core_rocc_cmd_bits_status_tw    (io_rocc_rocc_cmd_bits_status_tw),
    .io_core_rocc_cmd_bits_status_tvm   (io_rocc_rocc_cmd_bits_status_tvm),
    .io_core_rocc_cmd_bits_status_mxr   (io_rocc_rocc_cmd_bits_status_mxr),
    .io_core_rocc_cmd_bits_status_sum   (io_rocc_rocc_cmd_bits_status_sum),
    .io_core_rocc_cmd_bits_status_mprv  (io_rocc_rocc_cmd_bits_status_mprv),
    .io_core_rocc_cmd_bits_status_fs    (io_rocc_rocc_cmd_bits_status_fs),
    .io_core_rocc_cmd_bits_status_mpp   (io_rocc_rocc_cmd_bits_status_mpp),
    .io_core_rocc_cmd_bits_status_spp   (io_rocc_rocc_cmd_bits_status_spp),
    .io_core_rocc_cmd_bits_status_mpie  (io_rocc_rocc_cmd_bits_status_mpie),
    .io_core_rocc_cmd_bits_status_spie  (io_rocc_rocc_cmd_bits_status_spie),
    .io_core_rocc_cmd_bits_status_mie   (io_rocc_rocc_cmd_bits_status_mie),
    .io_core_rocc_cmd_bits_status_sie   (io_rocc_rocc_cmd_bits_status_sie),
    .io_core_rocc_resp_ready            (io_rocc_rocc_resp_ready),
    .io_resp_valid                      (io_ll_iresp_valid),
    .io_resp_bits_uop_rob_idx           (io_ll_iresp_bits_uop_rob_idx),
    .io_resp_bits_uop_pdst              (io_ll_iresp_bits_uop_pdst),
    .io_resp_bits_uop_is_amo            (io_ll_iresp_bits_uop_is_amo),
    .io_resp_bits_uop_uses_stq          (io_ll_iresp_bits_uop_uses_stq),
    .io_resp_bits_uop_dst_rtype         (io_ll_iresp_bits_uop_dst_rtype),
    .io_resp_bits_data                  (_rocc_io_resp_bits_data)
  );
  DivUnit div (	// @[execution-unit.scala:357:17]
    .clock                          (clock),
    .reset                          (reset),
    .io_req_valid                   (io_req_valid & io_req_bits_uop_fu_code[4]),	// @[execution-unit.scala:359:48, micro-op.scala:154:40]
    .io_req_bits_uop_ctrl_op_fcn    (io_req_bits_uop_ctrl_op_fcn),
    .io_req_bits_uop_ctrl_fcn_dw    (io_req_bits_uop_ctrl_fcn_dw),
    .io_req_bits_uop_br_mask        (io_req_bits_uop_br_mask),
    .io_req_bits_uop_rob_idx        (io_req_bits_uop_rob_idx),
    .io_req_bits_uop_pdst           (io_req_bits_uop_pdst),
    .io_req_bits_uop_bypassable     (io_req_bits_uop_bypassable),
    .io_req_bits_uop_is_amo         (io_req_bits_uop_is_amo),
    .io_req_bits_uop_uses_stq       (io_req_bits_uop_uses_stq),
    .io_req_bits_uop_dst_rtype      (io_req_bits_uop_dst_rtype),
    .io_req_bits_rs1_data           (io_req_bits_rs1_data[63:0]),	// @[execution-unit.scala:274:30]
    .io_req_bits_rs2_data           (io_req_bits_rs2_data[63:0]),	// @[execution-unit.scala:275:30]
    .io_req_bits_kill               (io_req_bits_kill),
    .io_resp_ready                  (~_alu_io_resp_valid),	// @[execution-unit.scala:262:17, :367:26]
    .io_brupdate_b1_resolve_mask    (io_brupdate_b1_resolve_mask),
    .io_brupdate_b1_mispredict_mask (io_brupdate_b1_mispredict_mask),
    .io_req_ready                   (_div_io_req_ready),
    .io_resp_valid                  (_div_io_resp_valid),
    .io_resp_bits_uop_rob_idx       (_div_io_resp_bits_uop_rob_idx),
    .io_resp_bits_uop_pdst          (_div_io_resp_bits_uop_pdst),
    .io_resp_bits_uop_bypassable    (_div_io_resp_bits_uop_bypassable),
    .io_resp_bits_uop_is_amo        (_div_io_resp_bits_uop_is_amo),
    .io_resp_bits_uop_uses_stq      (_div_io_resp_bits_uop_uses_stq),
    .io_resp_bits_uop_dst_rtype     (_div_io_resp_bits_uop_dst_rtype),
    .io_resp_bits_data              (_div_io_resp_bits_data)
  );
  assign io_fu_types = {5'h1, ~div_busy, 4'h1};	// @[execution-unit.scala:252:45, :253:{21,22,58}, :370:39]
  assign io_iresp_valid = _alu_io_resp_valid | _div_io_resp_valid;	// @[execution-unit.scala:262:17, :357:17, :400:71]
  assign io_iresp_bits_uop_csr_addr = _alu_io_resp_bits_uop_imm_packed[19:8];	// @[execution-unit.scala:262:17, :411:34]
  assign io_iresp_bits_uop_rob_idx = _alu_io_resp_valid ? _alu_io_resp_bits_uop_rob_idx : _div_io_resp_bits_uop_rob_idx;	// @[Mux.scala:47:70, execution-unit.scala:262:17, :357:17]
  assign io_iresp_bits_uop_pdst = _alu_io_resp_valid ? _alu_io_resp_bits_uop_pdst : _div_io_resp_bits_uop_pdst;	// @[Mux.scala:47:70, execution-unit.scala:262:17, :357:17]
  assign io_iresp_bits_uop_bypassable = _alu_io_resp_valid ? _alu_io_resp_bits_uop_bypassable : _div_io_resp_bits_uop_bypassable;	// @[Mux.scala:47:70, execution-unit.scala:262:17, :357:17]
  assign io_iresp_bits_uop_is_amo = _alu_io_resp_valid ? _alu_io_resp_bits_uop_is_amo : _div_io_resp_bits_uop_is_amo;	// @[Mux.scala:47:70, execution-unit.scala:262:17, :357:17]
  assign io_iresp_bits_uop_uses_stq = _alu_io_resp_valid ? _alu_io_resp_bits_uop_uses_stq : _div_io_resp_bits_uop_uses_stq;	// @[Mux.scala:47:70, execution-unit.scala:262:17, :357:17]
  assign io_iresp_bits_uop_dst_rtype = _alu_io_resp_valid ? _alu_io_resp_bits_uop_dst_rtype : _div_io_resp_bits_uop_dst_rtype;	// @[Mux.scala:47:70, execution-unit.scala:262:17, :357:17]
  assign io_iresp_bits_data = {1'h0, _alu_io_resp_valid ? _alu_io_resp_bits_data : _div_io_resp_bits_data};	// @[Mux.scala:47:70, execution-unit.scala:262:17, :284:15, :357:17, :403:24]
  assign io_ll_iresp_bits_data = {1'h0, _rocc_io_resp_bits_data};	// @[execution-unit.scala:284:15, :295:18, :310:31]
  assign io_bypass_0_bits_data = {1'h0, _alu_io_bypass_0_bits_data};	// @[execution-unit.scala:262:17, :284:15]
endmodule

